<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <choice-exception-strategy name="Global_Exception_Handler_Strategy">
        <catch-exception-strategy doc:name="Catch Exception Strategy: exception.causedExactlyBy(java.io.IOException)" when="#[exception.causedExactlyBy(java.io.IOException)]">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: exception.causedBy(java.io.IOException) = #[exception.causedExactlyBy(java.io.IOException)]"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_OtherException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedExactlyBy(com.mulesoft.mule.module.datamapper.api.exception.DataMapperExecutionException)]" doc:name="Catch Exception Strategy: exception.causedBy(com.mulesoft.mule.module.datamapper.api.exception.DataMapperExecutionException)">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: exception.causedExactlyBy(com.mulesoft.mule.module.datamapper.api.exception.DataMapperExecutionException) = #[exception.causedExactlyBy(com.mulesoft.mule.module.datamapper.api.exception.DataMapperExecutionException)]"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_DataTransformationException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedExactlyBy(javax.validation.ValidationException)]" doc:name="Catch Exception Strategy: exception.causedExactlyBy(javax.validation.ValidationException)">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: exception.causedExactlyBy(javax.validation.ValidationException) = #[exception.causedExactlyBy(javax.validation.ValidationException)]"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_MessageValidationException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy>
        <catch-exception-strategy when="#[exception.causedExactlyBy(java.net.UnknownHostException)]" doc:name="Catch Exception Strategy: exception.causedExactlyBy(java.net.UnknownHostException)">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: exception.causedExactlyBy(java.net.UnknownHostException) = #[exception.causedExactlyBy(java.net.UnknownHostException)]"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_ServerUnavailableException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy>
        <!-- 
        <catch-exception-strategy when="#[exception.causedExactlyBy(com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException)]" doc:name="Catch_Exception_Strategy: exception.causedExactlyBy(com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException)">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: exception.causedExactlyBy(com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException) = #[exception.causedExactlyBy(com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException)]"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_DataStoreResultedException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy> -->
        <catch-exception-strategy doc:name="Catch Exception Strategy::Catch-All">
            <logger level="INFO" doc:name="log-catch-exception-strategy" message="Catch Exception Strategy: Catch-All"/>
            <set-variable variableName="exceptionCause" value="#[exception.getCause()]" doc:name="set-exception"/>
            <set-variable variableName="entityContext" value="transaction" doc:name="set-entityContext"/>
            <set-variable variableName="exceptionReason" value="processing_OtherException" doc:name="set-exceptionReason"/>
            <set-variable variableName="exceptionCode" value="" doc:name="set-exceptionCode"/>
            <set-variable variableName="createLog" value="true" doc:name="set-createLog"/>
            <flow-ref name="exception_handlingFlowSet-Username-Application-Details" doc:name="call-set-username-application-details"/>
            <flow-ref name="exception_handlingFlowCatchTransformer" doc:name="call-exception-handling-subFlow"/>
            <flow-ref name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="call-set-http-exception-response"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
    <flow name="exception_handlingFlow" doc:name="exception_handlingFlow">
        <logger message="exception_handlingFlow::start - #[payload]" level="INFO" doc:name="log-start"/>
        <http:outbound-endpoint exchange-pattern="request-response" host="${http.api.exception.process.host}" port="${http.api.exception.process.port}" path="${http.api.exception.process.path}" method="POST" doc:name="HTTP" contentType="application/json" responseTimeout="${http.api.exception.process.response.timeout}"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger message="exception_handlingFlow::end - #[payload]" level="INFO" doc:name="log-end"/>
    </flow>
    <sub-flow name="exception_handlingFlowCatchTransformer" doc:name="exception_handlingFlowCatchTransformer">
        <parse-template location="src\main\resources\Exception-process-request.template.json" doc:name="set-request-payload"/>
        <flow-ref name="exception_handlingFlow" doc:name="Flow Reference"/>
        <parse-template location="src\main\resources\Exception-process-response.template.json" doc:name="set-response-payload"/>
    </sub-flow>
    <sub-flow name="exception_handlingFlowSet-Username-Application-Details" doc:name="exception_handlingFlowSet-Username-Application-Details">
        <set-variable variableName="application" value="BVB ios Mobile" doc:name="set-application"/>
        <set-variable variableName="userName" value="John Smith" doc:name="set-userName"/>
    </sub-flow>
    <sub-flow name="exception_handlingFlow-http-exception-handler-response-builder" doc:name="exception_handlingFlow-http-exception-handler-response-builder">
        <http:response-builder status="#[json:exception/httpCode]" doc:name="HTTP-Exception Handler-Response-Builder"/>
    </sub-flow>
</mule>
